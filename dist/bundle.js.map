{"version":3,"sources":["webpack/bootstrap","./src/index.js","./src/game_screen.js","./src/ball.js","./src/paddle.js","./src/util.js","./src/brick.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GameScreen","document","addEventListener","canvas","getElementById","ctx","getContext","draw","Ball","Paddle","Util","Brick","[object Object]","this","collidedPaddle","playing","won","score","lives","paddleRadius","paddle","width","getRandomColor","ballRadius","ball","height","brickRows","brickCols","bricks","populateBricks","rightKeyDown","leftKeyDown","startGameHandler","mouseMoveHandler","wallCollision","e","keyCode","relativeX","clientX","body","offsetWidth","radius","x","font","fillStyle","fillText","clearRect","drawScore","drawLives","forEach","row","brick","ballBrickCollision","ballCollidedBrick","collided","newBallColor","color","collidedBottom","dy","collidedSide","dx","collidedTop","pos","visible","paddleCollision","move","drawWinningMessage","location","reload","requestAnimationFrame","drawPlayGameMessage","topWallCollide","y","bottomWallCollide","leftWallCollide","rightWallCollide","drawGameOverMessage","ballPos","length","col","brickPos","ballInXRange","ballInYRange","ballTouchBrickBottom","ballTouchBrickTop","ballTouchBrickLeft","ballTouchBrickRight","b","originalY","dyNew","nextX","nextY","dist","distance","distX","distY","dxNew","Math","pow","ratio","hypotenuse","dyRequirePositive","numRows","numCols","j","push","floor","random","xPos","yPos","beginPath","arc","PI","fill","closePath","pos1","pos2","x1","y1","x2","y2","abs","sqrt","a","rect","strokeStyle","stroke"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,qBClFA,MAAAC,EAAmBpC,EAAQ,GAE3BqC,SAAAC,iBAAA,wBACA,MAAAC,EAAAF,SAAAG,eAAA,YACAC,EAAAF,EAAAG,WAAA,MACA,IAAAN,EAAAG,EAAAE,GAAAE,0BCLA,MAAAC,EAAa5C,EAAQ,GACrB6C,EAAe7C,EAAQ,GACvB8C,EAAa9C,EAAQ,GACrB+C,EAAc/C,EAAQ,GA8UtBG,EAAAD,QA5UA,MACA8C,YAAAT,EAAAE,GACAQ,KAAAR,MACAQ,KAAAV,SACAU,KAAAC,gBAAA,EAGAD,KAAAE,SAAA,EAGAF,KAAAG,KAAA,EAGAH,KAAAI,MAAA,EAGAJ,KAAAK,MAAA,EAGAL,KAAAM,aAAA,GACAN,KAAAO,OAAA,IAAAX,EAAAN,EAAAE,EAAAF,EAAAkB,MAAA,EAAAR,KAAAM,aAAAN,KAAAS,kBAGAT,KAAAU,WAAA,GACAV,KAAAW,KAAA,IAAAhB,EAAAL,EAAAE,EAAAF,EAAAkB,MAAA,EAAAlB,EAAAsB,OAAA,EAAAZ,KAAAM,aAAAN,KAAAU,WAAAV,KAAAS,kBAGAT,KAAAa,UAAA,EACAb,KAAAc,UAAA,EACAd,KAAAe,OAAAf,KAAAgB,eAAAhB,KAAAa,UAAAb,KAAAc,WAEAd,KAAAiB,cAAA,EACAjB,KAAAkB,aAAA,EAEAlB,KAAAN,KAAAM,KAAAN,KAAAf,KAAAqB,MAGAA,KAAAmB,iBAAAnB,KAAAmB,iBAAAxC,KAAAqB,MACAA,KAAAoB,iBAAApB,KAAAoB,iBAAAzC,KAAAqB,MACAA,KAAAqB,cAAArB,KAAAqB,cAAA1C,KAAAqB,MAGAD,iBAAAuB,GACAtB,KAAAE,SAAA,EACAF,KAAAN,OAGAK,oBAAAuB,GACA,KAAAA,EAAAC,QACAvB,KAAAiB,cAAA,EACK,KAAAK,EAAAC,UACLvB,KAAAkB,aAAA,GAIAnB,kBAAAuB,GACA,KAAAA,EAAAC,QACAvB,KAAAiB,cAAA,EACK,KAAAK,EAAAC,UACLvB,KAAAkB,aAAA,GAIAnB,iBAAAuB,GACA,MAAAE,EAAAF,EAAAG,QACAC,EAAAtC,SAAAG,eAAA,QAEAiC,EAAA,IAAAE,EAAAC,YAAA3B,KAAAO,OAAAqB,OAAA,GAAAJ,EAAAxB,KAAAO,OAAAqB,OAAA,IAAAF,EAAAC,YAAA3B,KAAAV,OAAAkB,QACAR,KAAAO,OAAAsB,EAAAL,EAAA,IAAAE,EAAAC,aAIA5B,oBAAAP,EAAAF,GACAE,EAAAsC,KAAA,0BACAtC,EAAAuC,UAAA,QACAvC,EAAAwC,SAAA,gBAAA1C,EAAAkB,MAAA,IAAAlB,EAAAsB,OAAA,GAGAb,mBAAAP,EAAAF,GACAE,EAAAsC,KAAA,0BACAtC,EAAAuC,UAAA,OACAvC,EAAAwC,SAAA,WAAA1C,EAAAkB,MAAA,IAAAlB,EAAAsB,OAAA,GACApB,EAAAsC,KAAA,0BACAtC,EAAAuC,UAAA,cACAvC,EAAAwC,SAAA,uBAAA1C,EAAAkB,MAAA,IAAAlB,EAAAsB,OAAA,MAGAb,oBAAAP,EAAAF,GACAE,EAAAsC,KAAA,0BACAtC,EAAAuC,UAAA,OACAvC,EAAAwC,SAAA,aAAA1C,EAAAkB,MAAA,EAAAlB,EAAAsB,OAAA,GACApB,EAAAsC,KAAA,0BACAtC,EAAAuC,UAAA,cACAvC,EAAAwC,SAAA,sBAAA1C,EAAAkB,MAAA,IAAAlB,EAAAsB,OAAA,MAGAb,UAAAP,EAAAY,GACAZ,EAAAsC,KAAA,0BACAtC,EAAAuC,UAAA,UACAvC,EAAAwC,SAAA,UAAA5B,EAAA,MAGAL,UAAAP,EAAAa,GACAb,EAAAsC,KAAA,0BACAtC,EAAAuC,UAAA,UACAvC,EAAAwC,SAAA,UAAA3B,EAAA,QAGAN,OACAC,KAAAR,IAAAyC,UAAA,IAAAjC,KAAAV,OAAAkB,MAAAR,KAAAV,OAAAsB,QAGAZ,KAAAO,OAAAb,OAGAM,KAAAW,KAAAjB,OAGAM,KAAAkC,UAAAlC,KAAAR,IAAAQ,KAAAI,OAGAJ,KAAAmC,UAAAnC,KAAAR,IAAAQ,KAAAK,OAGAL,KAAAe,OAAAqB,QAAAC,IACAA,EAAAD,QAAAE,KAAA5C,UAGA,MAAA6C,EAAAvC,KAAAwC,kBAAAxC,KAAAW,KAAAX,KAAAe,QAEA,GAAAwB,EAAAE,SAAA,CACA,IAAAC,EAAA1C,KAAAS,iBACA,KAAAiC,IAAA1C,KAAAW,KAAAgC,OACAD,EAAA1C,KAAAS,iBAEAT,KAAAW,KAAAgC,MAAAD,EAEAH,EAAAK,eACA5C,KAAAW,KAAAkC,IAAA,EAAA7C,KAAAW,KAAAkC,GACON,EAAAO,aACP9C,KAAAW,KAAAoC,IAAA,EAAA/C,KAAAW,KAAAoC,GACOR,EAAAS,cACPhD,KAAAW,KAAAkC,IAAA,EAAA7C,KAAAW,KAAAkC,IAEA7C,KAAAe,OAAAwB,EAAAU,IAAA,IAAAV,EAAAU,IAAA,IAAAC,SAAA,EAEAlD,KAAAI,OAAA,EAGAJ,KAAAmD,gBAAAnD,KAAAW,KAAAX,KAAAO,OAAAP,KAAAR,KAEAQ,KAAAqB,cAAArB,KAAAW,KAAAX,KAAAV,OAAAU,KAAAO,QAIAnB,SAAAC,iBAAA,YAAAW,KAAAoB,kBAAA,GAEApB,KAAAW,KAAAyC,OAIApD,KAAAI,QAAAJ,KAAAa,UAAAb,KAAAc,UAAA,IACAd,KAAAE,SAAA,EACAF,KAAAR,IAAAyC,UAAA,IAAAjC,KAAAV,OAAAkB,MAAAR,KAAAV,OAAAsB,OAAA,GACAZ,KAAAW,KAAAjB,OACAM,KAAAkC,UAAAlC,KAAAR,IAAAQ,KAAAI,OACAJ,KAAAmC,UAAAnC,KAAAR,IAAAQ,KAAAK,OACAL,KAAAqD,mBAAArD,KAAAR,IAAAQ,KAAAV,QACAF,SAAAC,iBAAA,YAAAD,SAAAkE,SAAAC,UAAA,IAIAvD,KAAAE,QACAsD,sBAAAxD,KAAAN,MACKM,KAAAI,MAAAJ,KAAAa,UAAAb,KAAAc,UAAA,IACLd,KAAAyD,oBAAAzD,KAAAR,IAAAQ,KAAAV,QACAF,SAAAC,iBAAA,QAAAW,KAAAmB,kBAAA,IAKApB,cAAAY,EAAArB,EAAAiB,GACA,MAAAmD,EAAA/C,EAAAgD,EAAAhD,EAAAkC,IAAAlC,EAAAiB,OAAA,GACAgC,EAAAjD,EAAAgD,EAAAhD,EAAAkC,GAAAvD,EAAAsB,OAAAD,EAAAiB,OACAiC,EAAAlD,EAAAkB,EAAAlB,EAAAoC,IAAApC,EAAAiB,OACAkC,EAAAnD,EAAAkB,EAAAlB,EAAAoC,GAAAzD,EAAAkB,MAAAG,EAAAiB,OAEAgC,EACA5D,KAAAK,MAAA,GACAL,KAAAK,OAAA,EACAM,EAAAkB,EAAAvC,EAAAkB,MAAA,EACAG,EAAAgD,EAAArE,EAAAsB,OAAA,EAAAZ,KAAAM,aACAK,EAAAoC,GAAA,EACApC,EAAAkC,GAAA,EAEAtC,EAAAsB,EAAAvC,EAAAkB,MAAA,EACAD,EAAAoD,EAAArE,EAAAsB,SAEAZ,KAAA+D,oBAAA/D,KAAAR,IAAAQ,KAAAV,QACAF,SAAAC,iBAAA,YAAAD,SAAAkE,SAAAC,UAAA,KAGAG,IACA/C,EAAAkC,IAAAlC,EAAAkC,GACAlC,EAAAgD,GAAAhD,EAAAkC,KAGAgB,GAAAC,KACAnD,EAAAoC,IAAApC,EAAAoC,GACApC,EAAAkB,GAAAlB,EAAAoC,IAGA/C,KAAAC,gBAAA,GAIAF,kBAAAY,EAAAI,GAEA,MAAAiD,EAAA,CAAArD,EAAAkB,EAAAlB,EAAAgD,GAEA,QAAAtB,EAAA,EAAqBA,EAAAtB,EAAAkD,OAAqB5B,IAC1C,QAAA6B,EAAA,EAAuBA,EAAAnD,EAAAsB,GAAA4B,OAA0BC,IAAA,CACjD,MAAA5B,EAAAvB,EAAAsB,GAAA6B,GAEA,IAAA5B,EAAAY,QACA,SAGA,MAAAiB,EAAA7B,EAAAW,IAEAmB,EAAAJ,EAAA,GAAAG,EAAA,IAAAH,EAAA,GAAAG,EAAA,GAAA7B,EAAA9B,MACA6D,EAAAL,EAAA,GAAAG,EAAA,IAAAH,EAAA,GAAAG,EAAA,GAAA7B,EAAA1B,OACA0D,EAAAN,EAAA,GAAArD,EAAAiB,QAAAuC,EAAA,GAAA7B,EAAA1B,QAAAoD,EAAA,GAAArD,EAAAiB,OAAAuC,EAAA,GACAI,EAAAP,EAAA,GAAArD,EAAAiB,QAAAuC,EAAA,IAAAH,EAAA,GAAArD,EAAAiB,OAAAuC,EAAA,GAAA7B,EAAA1B,OAEA4D,EAAAR,EAAA,GAAAG,EAAA,IAAAH,EAAA,GAAArD,EAAAiB,QAAAuC,EAAA,GACAM,EAAAT,EAAA,GAAAG,EAAA,IAAAH,EAAA,GAAArD,EAAAiB,QAAAuC,EAAA,GAAA7B,EAAA9B,MAGAkE,EAAAL,GAAAI,EAEA,GAAAL,GAAAE,EACA,OAAkB7B,UAAA,EAAAQ,IAAA,CAAAZ,EAAA6B,GAAAtB,gBAAA,GACT,GALTyB,GAAAG,GAKS,EACT,OAAkB/B,UAAA,EAAAQ,IAAA,CAAAZ,EAAA6B,GAAApB,cAAA,GACT,GAAAsB,GAAAG,EACT,OAAkB9B,UAAA,EAAAQ,IAAA,CAAAZ,EAAA6B,GAAAlB,aAAA,GAKlB,OAAYP,UAAA,GAGZ1C,kBAAAY,EAAAgE,EAAAC,GACA,KAAAA,EAAAjE,EAAAgD,GAAAgB,GACAC,EAAA,IACAA,IAAA,GAIA,OAAAA,EAGA7E,gBAAAY,EAAAJ,EAAAf,GAEA,MAAAqF,EAAAlE,EAAAkB,EAAAlB,EAAAoC,GACA+B,EAAAnE,EAAAgD,EAAAhD,EAAAkC,GACAkC,EAAAlF,EAAAmF,SAAA,CAAAH,EAAAC,GAAA,CAAAvE,EAAAsB,EAAAtB,EAAAoD,IAEA,GAAAoB,GAAApE,EAAAiB,OAAArB,EAAAqB,OAAA,CACA,GAAA5B,KAAAC,eACA,OAGA,MAAA0E,EAAAhE,EAAAgD,EAEAsB,EAAAtE,EAAAkB,EAAAtB,EAAAsB,EACAqD,EAAAvE,EAAAgD,EAAApD,EAAAoD,EACAZ,EAAApC,EAAAoC,GACAF,GAAA,EAAAlC,EAAAkC,GAEA,IAAAsC,GAAA,EAAAC,KAAAC,IAAAN,EAAA,KAAAK,KAAAC,IAAAJ,EAAA,GAAAG,KAAAC,IAAAH,EAAA,IAAAnC,EAAA,EAAAkC,EAAAC,EAAArC,GACA+B,EAAA,EAAAQ,KAAAC,IAAAN,EAAA,KAAAK,KAAAC,IAAAH,EAAA,GAAAE,KAAAC,IAAAJ,EAAA,IAAApC,EAAA,EAAAoC,EAAAC,EAAAnC,GAEA,MAEAuC,EAFAzF,EAAA0F,WAAAJ,EAAAP,GACA/E,EAAA0F,WAAA,KAGAJ,GAAAG,EACAV,GAAAU,EAEAV,EAAA5E,KAAAwF,kBAAA7E,EAAAgE,EAAAC,GAEAjE,EAAAoC,GAAAoC,EACAxE,EAAAkC,GAAA+B,EAEAjE,EAAAkB,GAAAlB,EAAAoC,GACApC,EAAAgD,GAAAhD,EAAAkC,GAEAtC,EAAAoC,MAAA3C,KAAAS,iBACAT,KAAAC,gBAAA,EAEAD,KAAAC,gBAAA,EAGAF,eAAA0F,EAAAC,GACA,MAAA3E,EAAA,GAGA,QAAA5D,EAAA,EAAmBA,EAAAsI,EAAatI,IAAA,CAChC,MAAAkF,EAAA,GACA,QAAAsD,EAAA,EAAqBA,EAAAD,EAAaC,IAClCtD,EAAAuD,KAAA,IAAA9F,EAAAE,KAAAR,IAAA,CAAAmG,GAAA3F,KAAAV,OAAAkB,MAAAkF,GALA,GAKAvI,GAAA6C,KAAAV,OAAAsB,OAAA,IAAA6E,KAAAzF,KAAAV,OAAAkB,MALA,IAKAkF,EAAA,KAEA3E,EAAA6E,KAAAvD,GAEA,OAAAtB,EAGAhB,iBAGA,IAAA4C,EAAA,IACA,QAAAxF,EAAA,EAAmBA,EAAA,EAAOA,IAC1BwF,GAJA,mBAIAyC,KAAAS,MAAA,GAAAT,KAAAU,WAGA,OAAAnD,mBCnTAzF,EAAAD,QA1BA,MACA8C,YAAAT,EAAAE,EAAAuG,EAAAC,EAAApE,EAAAe,GACA3C,KAAAV,SACAU,KAAAR,MACAQ,KAAA6B,EAAAkE,EACA/F,KAAA2D,EAAAqC,EACAhG,KAAA4B,SACA5B,KAAA+C,GAAA,EACA/C,KAAA6C,GAAA,EACA7C,KAAA2C,QAGA5C,OACAC,KAAAR,IAAAyG,YACAjG,KAAAR,IAAA0G,IAAAlG,KAAA6B,EAAA7B,KAAA2D,EAAA3D,KAAA4B,OAAA,IAAAwD,KAAAe,IACAnG,KAAAR,IAAAuC,UAAA/B,KAAA2C,MACA3C,KAAAR,IAAA4G,OACApG,KAAAR,IAAA6G,YAGAtG,OACAC,KAAA6B,GAAA7B,KAAA+C,GACA/C,KAAA2D,GAAA3D,KAAA6C,oBCQA3F,EAAAD,QA9BA,MACA8C,YAAAT,EAAAE,EAAAuG,EAAAzF,EAAAqC,GACA3C,KAAAR,MACAQ,KAAAV,SACAU,KAAA6B,EAAAkE,EACA/F,KAAA2D,EAAArE,EAAAsB,OACAZ,KAAA4B,OAAAtB,EACAN,KAAA2C,QAGA5C,OACAC,KAAAR,IAAAyG,YACAjG,KAAAR,IAAA0G,IAAAlG,KAAA6B,EAAA7B,KAAAV,OAAAsB,OAAAZ,KAAA4B,OAAAwD,KAAAe,GAAA,EAAAf,KAAAe,IAEAnG,KAAAR,IAAAuC,UAAA/B,KAAA2C,MACA3C,KAAAR,IAAA4G,OACApG,KAAAR,IAAA6G,YAKAtG,KAAAmB,EAAAD,GACAA,GAAAjB,KAAA6B,EAAA,OAAA7B,KAAAV,OAAAkB,MACAR,KAAA6B,GAAA,EACKX,GAAAlB,KAAA6B,EAAA,WACL7B,KAAA6B,GAAA,oBCzBA,MAAAhC,EAAA,CACAmF,SAAA,SAAAsB,EAAAC,GACA,MAAAC,EAAAC,GAAAH,GACAI,EAAAC,GAAAJ,EAEAxD,EAAAqC,KAAAwB,IAAAJ,EAAAE,GACA7D,EAAAuC,KAAAwB,IAAAH,EAAAE,GAEA,OAAAvB,KAAAyB,KAAAzB,KAAAC,IAAAtC,EAAA,GAAAqC,KAAAC,IAAAxC,EAAA,KAGA0C,WAAA,SAAAuB,EAAApC,GACA,OAAAU,KAAAyB,KAAAzB,KAAAwB,IAAAE,KAAA1B,KAAAwB,IAAAlC,QAIAxH,EAAAD,QAAA4C,iBCMA3C,EAAAD,QAtBA,MACA8C,YAAAP,EAAAyD,EAAAzC,EAAAI,GACAZ,KAAAR,MACAQ,KAAAiD,MACAjD,KAAAQ,QACAR,KAAAY,SACAZ,KAAAkD,SAAA,EAGAnD,OACAC,KAAAkD,UACAlD,KAAAR,IAAAyG,YACAjG,KAAAR,IAAAuH,KAAA/G,KAAAiD,IAAA,GAAAjD,KAAAiD,IAAA,GAAAjD,KAAAQ,MAAAR,KAAAY,QACAZ,KAAAR,IAAAuC,UAAA,SACA/B,KAAAR,IAAA4G,OACApG,KAAAR,IAAAwH,YAAA,SACAhH,KAAAR,IAAAyH,SACAjH,KAAAR,IAAA6G","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const GameScreen = require(\"./game_screen\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"myCanvas\");\n  const ctx = canvas.getContext(\"2d\");\n  new GameScreen(canvas, ctx).draw();\n});\n","const Ball = require(\"./ball\");\nconst Paddle = require(\"./paddle\");\nconst Util = require(\"./util\");\nconst Brick = require(\"./brick\");\n\nclass GameScreen {\n  constructor(canvas, ctx) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.collidedPaddle = false;\n\n    //Game start\n    this.playing = false;\n\n    //Game won\n    this.won = false;\n\n    //Score Information\n    this.score = 0;\n\n    //Lives Information\n    this.lives = 2;\n\n    //Information for paddle\n    this.paddleRadius = 90;\n    this.paddle = new Paddle(canvas, ctx, canvas.width / 2, this.paddleRadius, this.getRandomColor());\n\n    // Information for ball\n    this.ballRadius = 10;\n    this.ball = new Ball(canvas, ctx, canvas.width / 2, canvas.height - 2 * this.paddleRadius, this.ballRadius, this.getRandomColor());\n\n    // Information for bricks\n    this.brickRows = 4;\n    this.brickCols = 9;\n    this.bricks = this.populateBricks(this.brickRows, this.brickCols);\n\n    this.rightKeyDown = false;\n    this.leftKeyDown = false;\n\n    this.draw = this.draw.bind(this);\n    // this.keyDownEventHandler = this.keyDownEventHandler.bind(this);\n    // this.keyUpEventHandler = this.keyUpEventHandler.bind(this);\n    this.startGameHandler = this.startGameHandler.bind(this);\n    this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    this.wallCollision = this.wallCollision.bind(this);\n  }\n\n  startGameHandler(e) {\n    this.playing = true;\n    this.draw();\n  }\n\n  keyDownEventHandler(e) {\n    if (e.keyCode === 39) {\n      this.rightKeyDown = true;\n    } else if (e.keyCode === 37) {\n      this.leftKeyDown = true;\n    }\n  }\n\n  keyUpEventHandler(e) {\n    if (e.keyCode === 39) {\n      this.rightKeyDown = false;\n    } else if (e.keyCode === 37) {\n      this.leftKeyDown = false;\n    }\n  }\n\n  mouseMoveHandler(e) {\n    const relativeX = e.clientX;\n    const body = document.getElementById(\"body\");\n\n    if (relativeX - body.offsetWidth * 0.35 - this.paddle.radius > 0 && relativeX + this.paddle.radius < body.offsetWidth * 0.35 + this.canvas.width) {\n        this.paddle.x = relativeX - body.offsetWidth * 0.35;\n    }\n  }\n\n  drawPlayGameMessage(ctx, canvas) {\n    ctx.font = \"bold 45px Comic Sans MS\";\n    ctx.fillStyle = \"black\";\n    ctx.fillText(\"Click to Play\", canvas.width / 4.4, canvas.height / 2);\n  }\n\n  drawWinningMessage(ctx, canvas) {\n    ctx.font = \"bold 45px Comic Sans MS\";\n    ctx.fillStyle = \"grey\";\n    ctx.fillText(\"Cleared!\", canvas.width / 3.2, canvas.height / 2);\n    ctx.font = \"bold 30px Comic Sans MS\";\n    ctx.fillStyle = \"lightergrey\";\n    ctx.fillText(\"Click to play again!\", canvas.width / 4.4, canvas.height / 2 + 45);\n  }\n\n  drawGameOverMessage(ctx, canvas) {\n    ctx.font = \"bold 45px Comic Sans MS\";\n    ctx.fillStyle = \"grey\";\n    ctx.fillText(\"Game Over!\", canvas.width / 4, canvas.height / 2);\n    ctx.font = \"bold 30px Comic Sans MS\";\n    ctx.fillStyle = \"lightergrey\";\n    ctx.fillText(\"Click to try again!\", canvas.width / 4.2, canvas.height / 2 + 45);\n  }\n\n  drawScore(ctx, score) {\n    ctx.font = \"bold 22px Comic Sans MS\";\n    ctx.fillStyle = \"#0095DD\";\n    ctx.fillText(\"Score: \" + score, 5, 24);\n  }\n\n  drawLives(ctx, lives) {\n    ctx.font = \"bold 22px Comic Sans MS\";\n    ctx.fillStyle = \"#0095DD\";\n    ctx.fillText(\"Lives: \" + lives, 410, 24);\n  }\n\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    // Draw paddle\n    this.paddle.draw();\n\n    // Draw ball\n    this.ball.draw();\n\n    //Draw score\n    this.drawScore(this.ctx, this.score);\n\n    //Draw lives\n    this.drawLives(this.ctx, this.lives);\n\n    // Draw bricks\n    this.bricks.forEach(row => {\n      row.forEach(brick => brick.draw());\n    })\n\n    const ballBrickCollision = this.ballCollidedBrick(this.ball, this.bricks);\n\n    if (ballBrickCollision.collided) {\n      let newBallColor = this.getRandomColor();\n      while (newBallColor === this.ball.color) {\n        newBallColor = this.getRandomColor();\n      }\n      this.ball.color = newBallColor;\n\n      if (ballBrickCollision.collidedBottom) {\n        this.ball.dy = -1 * this.ball.dy;\n      } else if (ballBrickCollision.collidedSide) {\n        this.ball.dx = -1 * this.ball.dx;\n      } else if (ballBrickCollision.collidedTop) {\n        this.ball.dy = -1 * this.ball.dy;\n      }\n      this.bricks[ballBrickCollision.pos[0]][ballBrickCollision.pos[1]].visible = false;\n\n      this.score += 7;\n    }\n\n    this.paddleCollision(this.ball, this.paddle, this.ctx);\n\n    this.wallCollision(this.ball, this.canvas, this.paddle);\n\n    // document.addEventListener(\"keydown\", this.keyDownEventHandler, false);\n    // document.addEventListener(\"keyup\", this.keyUpEventHandler, false);\n    document.addEventListener(\"mousemove\", this.mouseMoveHandler, false);\n\n    this.ball.move();\n    //this.paddle.move(this.leftKeyDown, this.rightKeyDown);\n\n    //Draw win message\n    if (this.score === this.brickRows * this.brickCols * 7) {\n      this.playing = false;\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height / 2);\n      this.ball.draw();\n      this.drawScore(this.ctx, this.score);\n      this.drawLives(this.ctx, this.lives);\n      this.drawWinningMessage(this.ctx, this.canvas);\n      document.addEventListener(\"click\", () => document.location.reload(), false);\n      // document.location.reload();\n    }\n\n    if (this.playing) {\n      requestAnimationFrame(this.draw);\n    } else if (this.score < this.brickRows * this.brickCols * 7) {\n      this.drawPlayGameMessage(this.ctx, this.canvas);\n      document.addEventListener(\"click\", this.startGameHandler, false);\n    }\n\n  }\n\n  wallCollision(ball, canvas, paddle) {\n    const topWallCollide = ball.y + ball.dy <= ball.radius + 30;\n    const bottomWallCollide = ball.y + ball.dy > canvas.height - ball.radius;\n    const leftWallCollide = ball.x + ball.dx <= ball.radius;\n    const rightWallCollide = ball.x + ball.dx > canvas.width - ball.radius;\n\n    if (bottomWallCollide) {\n      if (this.lives > 0) {\n        this.lives -= 1;\n        ball.x = canvas.width / 2;\n        ball.y = canvas.height - 2 * this.paddleRadius;\n        ball.dx = 0;\n        ball.dy = 6;\n\n        paddle.x = canvas.width / 2;\n        paddle.y = canvas.height;\n      } else {\n        this.drawGameOverMessage(this.ctx, this.canvas);\n        document.addEventListener(\"click\", () => document.location.reload(), false);\n      }\n    } else {\n      if (topWallCollide) {\n        ball.dy = -ball.dy;\n        ball.y += ball.dy;\n      }\n\n      if (leftWallCollide || rightWallCollide) {\n        ball.dx = -ball.dx;\n        ball.x += ball.dx;\n      }\n\n      this.collidedPaddle = false;\n    }\n  }\n\n  ballCollidedBrick(ball, bricks) {\n\n    const ballPos = [ball.x, ball.y];\n\n    for (let row = 0; row < bricks.length; row++) {\n      for (let col = 0; col < bricks[row].length; col++) {\n        const brick = bricks[row][col];\n\n        if (!brick.visible) {\n          continue;\n        }\n\n        const brickPos = brick.pos;\n\n        const ballInXRange = ballPos[0] > brickPos[0] && ballPos[0] < brickPos[0] + brick.width;\n        const ballInYRange = ballPos[1] > brickPos[1] && ballPos[1] < brickPos[1] + brick.height;\n        const ballTouchBrickBottom = ballPos[1] - ball.radius <= brickPos[1] + brick.height && ballPos[1] - ball.radius > brickPos[1];\n        const ballTouchBrickTop = ballPos[1] + ball.radius >= brickPos[1] && ballPos[1] + ball.radius < brickPos[1] + brick.height;\n\n        const ballTouchBrickLeft = ballPos[0] < brickPos[0] && ballPos[0] + ball.radius >= brickPos[0];\n        const ballTouchBrickRight = ballPos[0] > brickPos[0] && ballPos[0] - ball.radius <= brickPos[0] + brick.width;\n\n        const a = ballInYRange && ballTouchBrickLeft;\n        const b = ballInYRange && ballTouchBrickRight;\n        // Case 1: Ball touches bottom of brick\n        if (ballInXRange && ballTouchBrickBottom) {\n          return {collided: true, pos: [row, col], collidedBottom: true};\n        } else if ((a) || (b)) {\n          return {collided: true, pos: [row, col], collidedSide: true};\n        } else if (ballInXRange && ballTouchBrickTop) {\n          return {collided: true, pos: [row, col], collidedTop: true};\n        }\n      }\n    }\n\n    return {collided: false};\n  }\n\n  dyRequirePositive(ball, originalY, dyNew) {\n    while (dyNew + ball.y >= originalY) {\n      if (dyNew > 0) {\n        dyNew *= -1;\n      }\n    }\n\n    return dyNew;\n  }\n\n  paddleCollision(ball, paddle, ctx) {\n\n    const nextX = ball.x + ball.dx;\n    const nextY = ball.y + ball.dy;\n    const dist = Util.distance([nextX, nextY], [paddle.x, paddle.y]);\n\n    if (dist <= ball.radius + paddle.radius) {\n      if (this.collidedPaddle) {\n        return;\n      }\n\n      const originalY = ball.y;\n\n      const distX = ball.x - paddle.x;\n      const distY = ball.y - paddle.y;\n      const dx = ball.dx;\n      const dy = -1 * ball.dy;\n\n      let dxNew = ((-1 / Math.pow(dist, 2)) * ((Math.pow(distX, 2) - Math.pow(distY, 2)) * dx - (2 * distX * distY * dy)));\n      let dyNew = ((1 / Math.pow(dist, 2)) * ((Math.pow(distY, 2) - Math.pow(distX, 2)) * dy - (2 * distX * distY * dx)));\n\n      const hypo = Util.hypotenuse(dxNew, dyNew);\n      const wantedSpeed = Util.hypotenuse(6, 6);\n      const ratio = hypo / wantedSpeed;\n\n      dxNew = dxNew / ratio;\n      dyNew = dyNew / ratio;\n\n      dyNew = this.dyRequirePositive(ball, originalY, dyNew);\n\n      ball.dx = dxNew;\n      ball.dy = dyNew;\n\n      ball.x += ball.dx;\n      ball.y += ball.dy;\n\n      paddle.color = this.getRandomColor();\n      this.collidedPaddle = true;\n    }\n    this.collidedPaddle = false;\n  }\n\n  populateBricks(numRows, numCols) {\n    const bricks = [];\n    const topPadding = 40;\n\n    for (let i = 0; i < numRows; i++) {\n      const row = [];\n      for (let j = 0; j < numCols; j++) {\n        row.push(new Brick(this.ctx, [j * (this.canvas.width / numCols), topPadding + i * (this.canvas.height / 3.5 / numRows)], (this.canvas.width - topPadding) / numCols, 15));\n      }\n      bricks.push(row);\n    }\n    return bricks;\n  }\n\n  getRandomColor() {\n    const letters = \"0123456789ABCDEF\";\n\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n}\n\nmodule.exports = GameScreen;\n","class Ball {\n  constructor(canvas, ctx, xPos, yPos, radius, color) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.x = xPos;\n    this.y = yPos;\n    this.radius = radius;\n    this.dx = 0;\n    this.dy = 6;\n    this.color = color;\n  }\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    this.ctx.fillStyle = this.color;\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  move() {\n    this.x += this.dx;\n    this.y += this.dy;\n  }\n}\n\nmodule.exports = Ball;\n","class Paddle {\n  constructor(canvas, ctx, xPos, paddleRadius, color) {\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.x = xPos;\n    this.y = canvas.height;\n    this.radius = paddleRadius;\n    this.color = color;\n  }\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.canvas.height, this.radius, Math.PI, 2 * Math.PI);\n    // this.ctx.closePath();\n    this.ctx.fillStyle = this.color;\n    this.ctx.fill();\n    this.ctx.closePath();\n    // this.ctx.strokeStyle = \"blue\";\n    // this.ctx.stroke();\n  }\n\n  move(leftKeyDown, rightKeyDown) {\n    if (rightKeyDown && this.x + 50 + 0.5 <= this.canvas.width) {\n      this.x += 2;\n    } else if (leftKeyDown && this.x - 50 - 0.5 >= 0) {\n      this.x -= 2;\n    }\n  }\n}\n\nmodule.exports = Paddle;\n","const Util = {\n  distance: function(pos1, pos2) {\n    const [x1, y1] = pos1;\n    const [x2, y2] = pos2;\n\n    const dx = Math.abs(x1 - x2);\n    const dy = Math.abs(y1 - y2);\n\n    return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n  },\n\n  hypotenuse: function(a, b) {\n    return Math.sqrt(Math.abs(a * a) + Math.abs(b * b));\n  }\n}\n\nmodule.exports = Util;\n","class Brick {\n  constructor(ctx, pos, width, height) {\n    this.ctx = ctx;\n    this.pos = pos;\n    this.width = width;\n    this.height = height;\n    this.visible = true;\n  }\n\n  draw() {\n    if (this.visible) {\n      this.ctx.beginPath();\n      this.ctx.rect(this.pos[0], this.pos[1], this.width, this.height);\n      this.ctx.fillStyle = \"orange\";\n      this.ctx.fill();\n      this.ctx.strokeStyle = \"purple\";\n      this.ctx.stroke();\n      this.ctx.closePath();\n    }\n  }\n}\n\nmodule.exports = Brick;\n"],"sourceRoot":""}