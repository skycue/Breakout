!function(t){var i={};function s(e){if(i[e])return i[e].exports;var h=i[e]={i:e,l:!1,exports:{}};return t[e].call(h.exports,h,h.exports,s),h.l=!0,h.exports}s.m=t,s.c=i,s.d=function(t,i,e){s.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:e})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,i){if(1&i&&(t=s(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(s.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var h in t)s.d(e,h,function(i){return t[i]}.bind(null,h));return e},s.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(i,"a",i),i},s.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},s.p="",s(s.s=0)}([function(t,i,s){const e=s(1);document.addEventListener("DOMContentLoaded",()=>{const t=document.getElementById("myCanvas"),i=t.getContext("2d");new e(t,i).draw()})},function(t,i,s){const e=s(2),h=s(3),l=s(4),o=s(5);t.exports=class{constructor(t,i){this.ctx=i,this.canvas=t,this.collidedPaddle=!1,this.playing=!1,this.won=!1,this.score=0,this.lives=2,this.paddleRadius=90,this.paddle=new h(t,i,t.width/2,this.paddleRadius,this.getRandomColor()),this.ballRadius=10,this.ball=new e(t,i,t.width/2,t.height-2*this.paddleRadius,this.ballRadius,this.getRandomColor()),this.brickRows=4,this.brickCols=9,this.bricks=this.populateBricks(this.brickRows,this.brickCols),this.rightKeyDown=!1,this.leftKeyDown=!1,this.draw=this.draw.bind(this),this.startGameHandler=this.startGameHandler.bind(this),this.mouseMoveHandler=this.mouseMoveHandler.bind(this),this.wallCollision=this.wallCollision.bind(this)}startGameHandler(t){this.playing=!0,this.draw()}keyDownEventHandler(t){39===t.keyCode?this.rightKeyDown=!0:37===t.keyCode&&(this.leftKeyDown=!0)}keyUpEventHandler(t){39===t.keyCode?this.rightKeyDown=!1:37===t.keyCode&&(this.leftKeyDown=!1)}mouseMoveHandler(t){const i=t.clientX,s=document.getElementById("body");i-.35*s.offsetWidth-this.paddle.radius>0&&i+this.paddle.radius<.35*s.offsetWidth+this.canvas.width&&(this.paddle.x=i-.35*s.offsetWidth)}drawPlayGameMessage(t,i){t.font="bold 45px Comic Sans MS",t.fillStyle="black",t.fillText("Click to Play",i.width/4.4,i.height/2)}drawWinningMessage(t,i){t.font="bold 45px Comic Sans MS",t.fillStyle="grey",t.fillText("Cleared!",i.width/3.2,i.height/2),t.font="bold 30px Comic Sans MS",t.fillStyle="lightergrey",t.fillText("Click to play again!",i.width/4.4,i.height/2+45)}drawGameOverMessage(t,i){t.font="bold 45px Comic Sans MS",t.fillStyle="grey",t.fillText("Game Over!",i.width/4,i.height/2),t.font="bold 30px Comic Sans MS",t.fillStyle="lightergrey",t.fillText("Click to try again!",i.width/4.2,i.height/2+45)}drawScore(t,i){t.font="bold 22px Comic Sans MS",t.fillStyle="#0095DD",t.fillText("Score: "+i,5,24)}drawLives(t,i){t.font="bold 22px Comic Sans MS",t.fillStyle="#0095DD",t.fillText("Lives: "+i,410,24)}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.paddle.draw(),this.ball.draw(),this.drawScore(this.ctx,this.score),this.drawLives(this.ctx,this.lives),this.bricks.forEach(t=>{t.forEach(t=>t.draw())});const t=this.ballCollidedBrick(this.ball,this.bricks);if(t.collided){let i=this.getRandomColor();for(;i===this.ball.color;)i=this.getRandomColor();this.ball.color=i,t.collidedBottom?this.ball.dy=-1*this.ball.dy:t.collidedSide?this.ball.dx=-1*this.ball.dx:t.collidedTop&&(this.ball.dy=-1*this.ball.dy),this.bricks[t.pos[0]][t.pos[1]].visible=!1,this.score+=7}this.paddleCollision(this.ball,this.paddle,this.ctx),this.wallCollision(this.ball,this.canvas,this.paddle),document.addEventListener("mousemove",this.mouseMoveHandler,!1),this.ball.move(),this.score===this.brickRows*this.brickCols*7&&(this.playing=!1,this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height/2),this.ball.draw(),this.drawScore(this.ctx,this.score),this.drawLives(this.ctx,this.lives),this.drawWinningMessage(this.ctx,this.canvas),document.addEventListener("click",()=>document.location.reload(),!1)),this.playing?requestAnimationFrame(this.draw):this.score<this.brickRows*this.brickCols*7&&(this.drawPlayGameMessage(this.ctx,this.canvas),document.addEventListener("click",this.startGameHandler,!1))}wallCollision(t,i,s){const e=t.y+t.dy<=t.radius+30,h=t.y+t.dy>i.height-t.radius,l=t.x+t.dx<=t.radius,o=t.x+t.dx>i.width-t.radius;h?this.lives>0?(this.lives-=1,t.x=i.width/2,t.y=i.height-2*this.paddleRadius,t.dx=0,t.dy=6,s.x=i.width/2,s.y=i.height):(this.drawGameOverMessage(this.ctx,this.canvas),document.addEventListener("click",()=>document.location.reload(),!1)):(e&&(t.dy=-t.dy,t.y+=t.dy),(l||o)&&(t.dx=-t.dx,t.x+=t.dx),this.collidedPaddle=!1)}ballCollidedBrick(t,i){const s=[t.x,t.y];for(let e=0;e<i.length;e++)for(let h=0;h<i[e].length;h++){const l=i[e][h];if(!l.visible)continue;const o=l.pos,a=s[0]>o[0]&&s[0]<o[0]+l.width,d=s[1]>o[1]&&s[1]<o[1]+l.height,r=s[1]-t.radius<=o[1]+l.height&&s[1]-t.radius>o[1],n=s[1]+t.radius>=o[1]&&s[1]+t.radius<o[1]+l.height,c=s[0]<o[0]&&s[0]+t.radius>=o[0],u=s[0]>o[0]&&s[0]-t.radius<=o[0]+l.width,x=d&&u;if(a&&r)return{collided:!0,pos:[e,h],collidedBottom:!0};if(d&&c||x)return{collided:!0,pos:[e,h],collidedSide:!0};if(a&&n)return{collided:!0,pos:[e,h],collidedTop:!0}}return{collided:!1}}dyRequirePositive(t,i,s){for(;s+t.y>=i;)s>0&&(s*=-1);return s}paddleCollision(t,i,s){const e=t.x+t.dx,h=t.y+t.dy,o=l.distance([e,h],[i.x,i.y]);if(o<=t.radius+i.radius){if(this.collidedPaddle)return;const s=t.y,e=t.x-i.x,h=t.y-i.y,a=t.dx,d=-1*t.dy;let r=-1/Math.pow(o,2)*((Math.pow(e,2)-Math.pow(h,2))*a-2*e*h*d),n=1/Math.pow(o,2)*((Math.pow(h,2)-Math.pow(e,2))*d-2*e*h*a);const c=l.hypotenuse(r,n)/l.hypotenuse(6,6);r/=c,n/=c,n=this.dyRequirePositive(t,s,n),t.dx=r,t.dy=n,t.x+=t.dx,t.y+=t.dy,i.color=this.getRandomColor(),this.collidedPaddle=!0}this.collidedPaddle=!1}populateBricks(t,i){const s=[];for(let e=0;e<t;e++){const h=[];for(let s=0;s<i;s++)h.push(new o(this.ctx,[s*(this.canvas.width/i),40+e*(this.canvas.height/3.5/t)],(this.canvas.width-40)/i,15));s.push(h)}return s}getRandomColor(){let t="#";for(let i=0;i<6;i++)t+="0123456789ABCDEF"[Math.floor(16*Math.random())];return t}}},function(t,i){t.exports=class{constructor(t,i,s,e,h,l){this.canvas=t,this.ctx=i,this.x=s,this.y=e,this.radius=h,this.dx=0,this.dy=6,this.color=l}draw(){this.ctx.beginPath(),this.ctx.arc(this.x,this.y,this.radius,0,2*Math.PI),this.ctx.fillStyle=this.color,this.ctx.fill(),this.ctx.closePath()}move(){this.x+=this.dx,this.y+=this.dy}}},function(t,i){t.exports=class{constructor(t,i,s,e,h){this.ctx=i,this.canvas=t,this.x=s,this.y=t.height,this.radius=e,this.color=h}draw(){this.ctx.beginPath(),this.ctx.arc(this.x,this.canvas.height,this.radius,Math.PI,2*Math.PI),this.ctx.fillStyle=this.color,this.ctx.fill(),this.ctx.closePath()}move(t,i){i&&this.x+50+.5<=this.canvas.width?this.x+=2:t&&this.x-50-.5>=0&&(this.x-=2)}}},function(t,i){const s={distance:function(t,i){const[s,e]=t,[h,l]=i,o=Math.abs(s-h),a=Math.abs(e-l);return Math.sqrt(Math.pow(o,2)+Math.pow(a,2))},hypotenuse:function(t,i){return Math.sqrt(Math.abs(t*t)+Math.abs(i*i))}};t.exports=s},function(t,i){t.exports=class{constructor(t,i,s,e){this.ctx=t,this.pos=i,this.width=s,this.height=e,this.visible=!0}draw(){this.visible&&(this.ctx.beginPath(),this.ctx.rect(this.pos[0],this.pos[1],this.width,this.height),this.ctx.fillStyle="orange",this.ctx.fill(),this.ctx.strokeStyle="purple",this.ctx.stroke(),this.ctx.closePath())}}}]);
//# sourceMappingURL=bundle.js.map